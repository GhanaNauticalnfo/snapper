services:
  ghanawaters-postgres:
    image: postgis/postgis:17-3.5-alpine
    container_name: ghanawaters-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER:-ghanawaters_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-ghanawaters_password}
      POSTGRES_DB: ${DATABASE_NAME:-ghanawaters_db}
    volumes:
      - ghanawaters-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ghanawaters-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-ghanawaters_user} -d ${DATABASE_NAME:-ghanawaters_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  martin:
    image: ghcr.io/maplibre/martin:latest
    container_name: martin_tileserver
    depends_on:
      ghanawaters-postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${DATABASE_USER:-ghanawaters_user}:${DATABASE_PASSWORD:-ghanawaters_password}@ghanawaters-postgres:5432/${DATABASE_NAME:-ghanawaters_db}
    volumes:
      - ../../support/martin/config.yaml:/config.yaml  # Mount the config file
    command: --config /config.yaml --webui enable-for-all  # Use the config file
    ports:
      - "4000:3000"
    restart: unless-stopped
    networks:
      - ghanawaters-network
      
 
  nanomq:
    image: emqx/nanomq:0.21-full
    container_name: ghanawaters-nanomq
    ports:
      - "1883:1883"  # MQTT (for local dev)
      - "8883:8883"  # MQTTS (for production-like testing)
    volumes:
      - ./nanomq/nanomq.conf:/etc/nanomq.conf
      - nanomq-data:/data/db/
    restart: unless-stopped
    networks:
      - ghanawaters-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1883"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Keycloak Authentication - Local Development
  keycloak-db:
    image: postgres:17-alpine
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - ghanawaters-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_HEALTH_ENABLED: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_RELATIVE_PATH: /
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    command: start-dev --import-realm
    networks:
      - ghanawaters-network
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8080/realms/ghanawaters | grep -q ghanawaters"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s
    restart: unless-stopped

networks:
  ghanawaters-network:
    driver: bridge

volumes:
  ghanawaters-postgres-data:
    driver: local
  nanomq-data:
    driver: local
  keycloak-db-data:
    driver: local