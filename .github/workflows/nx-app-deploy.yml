name: Nx build → push → patch overlay
on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets: inherit

permissions:
  contents: write
  packages: write

jobs:
  build-and-patch:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io/yourorg          # ← change to your org / user
      NODE_VERSION: 20

    steps:
      # ─────────── checkout & deps ───────────
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0                 # Nx affected needs history

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      # ─────────── build app (Nx) ───────────
      - name: Build ${{ inputs.app_name }}
        run: npx nx run ${{ inputs.app_name }}:build --configuration=${{ inputs.environment }}

      # ─────────── docker build & push ──────
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image tag
        id: meta
        run: echo "tag=$(echo ${GITHUB_SHA::7})-${{ github.run_number }}" >> "$GITHUB_OUTPUT"

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ inputs.app_name }}/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/ghanawaters-${{ inputs.app_name }}:${{ steps.meta.outputs.tag }}
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/ghanawaters-${{ inputs.app_name }}:cache
          cache-to: |
            type=registry,ref=${{ env.REGISTRY }}/ghanawaters-${{ inputs.app_name }}:cache,mode=max

      # ─────────── patch overlay & commit ───
      - name: Install yq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y yq

      - name: Bump tag in kustomization
        env:
          IMAGE_PATH: k8s/overlays/${{ inputs.environment }}/kustomization.yaml
          IMAGE_NAME: ${{ env.REGISTRY }}/ghanawaters-${{ inputs.app_name }}
        run: |
          yq -i '
            (.images[] | select(.name == env(IMAGE_NAME))).newTag = "${{ steps.meta.outputs.tag }}"
          ' "$IMAGE_PATH"

      - name: Commit & push overlay change
        env:
          GIT_AUTHOR_NAME:  ci
          GIT_AUTHOR_EMAIL: ci@github
        run: |
          git config user.name  "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add k8s/overlays/${{ inputs.environment }}/kustomization.yaml
          git commit -m "[skip ci] ${{
            inputs.environment }}: bump ${{ inputs.app_name }} to ${{ steps.meta.outputs.tag }}" || echo "no changes"
          git push
